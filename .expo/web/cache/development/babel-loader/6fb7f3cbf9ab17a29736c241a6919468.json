{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/run/media/vidit/1D78254F72E58C9A/Streamer/Stream/src/screens/HomeScreen.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(\"Bot-Listener \" + Math.floor(Math.random() * 10000 + 1)),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setName = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"AppName\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate('userScreen', {\n        user: user\n      });\n    },\n    title: \"Join Party\",\n    style: styles.leftBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate('hostScreen', {\n        user: user\n      });\n    },\n    title: \"Host Party\",\n    style: styles.rightBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Username : \", user), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    autoCapitalize: \"none\",\n    value: user,\n    onChangeText: function onChangeText(newValue) {\n      return setName(newValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  center: {\n    alignContent: 'center'\n  },\n  text: {\n    fontSize: 30,\n    marginTop: \"10%\",\n    height: '20%',\n    alignSelf: 'center'\n  },\n  userName: {\n    fontSize: 20,\n    marginTop: \"40%\",\n    height: '20%',\n    alignSelf: 'center'\n  },\n  leftBtn: {\n    width: '50%',\n    alignSelf: 'auto',\n    justifyContent: 'center'\n  },\n  rightBtn: {\n    width: '50%',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: 'space-evenly'\n  },\n  textInput: {\n    borderColor: \"black\",\n    borderWidth: 1,\n    fontSize: 20,\n    width: \"80%\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/run/media/vidit/1D78254F72E58C9A/Streamer/Stream/src/screens/HomeScreen.js"],"names":["React","useState","HomeScreen","props","Math","floor","random","user","setName","styles","center","text","row","navigation","navigate","leftBtn","rightBtn","userName","textInput","newValue","StyleSheet","create","alignContent","fontSize","marginTop","height","alignSelf","width","justifyContent","flexDirection","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { Text, StyleSheet ,View ,Button,TextInput } from \"react-native\";\n\nconst HomeScreen = (props) => {\n  const [user,setName] = useState(\"Bot-Listener \" + Math.floor((Math.random() * 10000) + 1));\n  return <View style = {styles.center}>\n      <Text style={styles.text}>AppName</Text>\n      <View style = {styles.row}>\n        <Button \n            onPress={() => props.navigation.navigate('userScreen',{user:user})}\n            title=\"Join Party\"\n            style = {styles.leftBtn}\n        />\n        <Button\n          onPress={() => props.navigation.navigate('hostScreen',{user: user})}\n          title = \"Host Party\" \n          style = {styles.rightBtn}\n        />\n      </View>\n      <View>\n        <Text style={styles.userName}>Username : {user}</Text>\n        <View style={styles.row}>\n            <TextInput \n                style = {styles.textInput}\n                autoCapitalize=\"none\" //there are different types of capitalization\n                value = {user} // value prop can be used for assigining default value to the input\n                onChangeText={(newValue) => setName(newValue) }\n            />\n        </View>\n      </View>\n    </View> \n};\n\nconst styles = StyleSheet.create({\n  center : {\n    alignContent: 'center'\n  },\n  text: {\n    fontSize: 30,\n    marginTop: \"10%\",\n    height : '20%',\n    alignSelf: 'center', \n  },\n  userName: {\n    fontSize: 20,\n    marginTop: \"40%\",\n    height : '20%',\n    alignSelf: 'center'\n  },\n  leftBtn: {\n    width: '50%',\n    alignSelf: 'auto',\n    justifyContent: 'center',\n  },\n  rightBtn: {\n    width: '50%',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: \"row\" ,\n    justifyContent: 'space-evenly'\n  },\n  textInput : {\n    borderColor: \"black\",\n    borderWidth: 1,\n    fontSize: 20,\n    width: \"80%\",\n  }\n\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}